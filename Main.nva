module Main ()

data Tuple a b = Tuple a b
data Maybe a = Just a | Nothing

add a b = llvm_add_int64 (Tuple a b)

div a b = llvm_div_int64 (Tuple a b)

checkedDiv a b = (case b of 0 -> Nothing; n -> Just (div a n))

map f a = ( case a of Just b -> Just (f b); Nothing -> Nothing )

maybeAdd a = map (add a)

orDefault d a = ( case a of Just b -> b; Nothing -> d )

bind f m = (case m of Just b -> f b; Nothing -> Nothing)

main (Tuple n _) = orDefault 1 (bind (checkedDiv 2) (bind (checkedDiv 6) (Just 0)))
